name: Build Container Image and Preview Environment

on:
  pull_request:
    branches:
      - '*'

concurrency:
  group: pr-container-build

jobs:
  build-container:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push
      uses: docker/build-push-action@v5
      with:
        push: true
        context: elements-application/
        file: elements-application/Containerfile
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/neon-kube-previews:pr-${{ github.event.number }}
  
  create-preview-environment:
    runs-on: ubuntu-latest
    needs: build-container
    permissions: 
      pull-requests: write 

    steps:
    - name: Get branch name
      id: branch-name
      uses: tj-actions/branch-names@v7

    # TODO: verify that reusing branch_name, e.g when someone updates their
    # PR, does not cause this step to error (action idempotency)
    - name: Create Neon Branch and Compute for PR
      id: create-branch
      uses: neondatabase/create-branch-action@v4
      with:
        api_key: ${{ secrets.NEON_API_KEY }}
        project_id: ${{ secrets.NEON_PROJECT_ID }}
        # branch_name refers to the Neon branch, not a Git branch
        branch_name: pr-${{ github.event.number }}
        parent: main

    - name: Install the Argo CD CLI
      run: |
        curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/download/v2.8.4/argocd-linux-amd64
        sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
        rm argocd-linux-amd64

    - name: Login to Argo CD
      # Note that the ARGO_CD_HOSTNAME must not contain a protocol or trailing
      # slashes. It should only be a hostname, e.g argocd.example.com
      run: argocd login ${{ secrets.ARGOCD_HOSTNAME }} --username ${{ secrets.ARGOCD_USERNAME }} --password ${{ secrets.ARGOCD_PASSWORD }}

    - name: Prepare ngrok preview URL
      id: generate-ingress-domain
      if: env.NGROK_SUBDOMAIN
      run: echo "::set-output name=domain::pr-${{ github.event.number }}.${{ env.NGROK_SUBDOMAIN }}"
      env:
        NGROK_SUBDOMAIN: ${{ secrets.NGROK_SUBDOMAIN }} 


    - name: Create the Preview Environment using Argo CD
      # Note that the ARGO_CD_HOSTNAME must not contain a protocol or trailing
      # slashes. It should only be a hostname, e.g argocd.example.com
      run: |
        argocd app create nkp-pr-${{github.event.number}} \
        --repo https://github.com/evanshortiss/neon-kube-previews \
        --revision ${{ steps.branch-name.outputs.current_branch }} \
        --dest-namespace nkp-pr-${{github.event.number}} \
        --dest-server https://kubernetes.default.svc \
        --path helm \
        --helm-set database.url=${{ steps.create-branch.outputs.db_url }} \
        --helm-set image.repository=docker.io/${{ secrets.DOCKERHUB_USERNAME }} \
        --helm-set image.tag=pr-${{ github.event.number }} \
        --helm-set namespace=nkp-pr-${{ github.event.number }} \
        --helm-set ingress.domain="${{ steps.generate-ingress-domain.outputs.domain }}" \
        --self-heal \
        --sync-option 'CreateNamespace=true' \
        --sync-policy auto \
        --upsert \
        --auto-prune 

    - name: Comment on Pull Request
      uses: thollander/actions-comment-pull-request@v2
      if: steps.generate-ingress-domain.outputs.domain
      with:
        message: |
          Preview URL :rocket: https://${{ steps.generate-ingress-domain.outputs.domain }}
